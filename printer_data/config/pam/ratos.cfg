[pam]


[gcode_macro _START_PRINT_BED_MESH]
gcode:
  {% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
  BED_MESH_CLEAR
  {% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
    PAM PROFILE={default_profile}
    BED_MESH_PROFILE LOAD={default_profile}
  {% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
    BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
  {% endif %}


[gcode_macro PRIME]
variable_prime_location: ""           # dynamicaly changed value, used by PAM for adaptive priming
variable_toolhead_offset_left: 35     # dynamicaly changed value, used by PAM for adaptive priming
variable_toolhead_offset_right: 30    # dynamicaly changed value, used by PAM for adaptive priming
variable_toolhead_offset_front: 15    # dynamicaly changed value, used by PAM for adaptive priming
variable_toolhead_offset_back: 15     # dynamicaly changed value, used by PAM for adaptive priming
description: Primes the toolhead with the choosen method, used internally, if configured, as part of the START_PRINT macro.
gcode:
  # Save State
  SAVE_GCODE_STATE NAME=prime_state

  # Hello
  {% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
    M117 Priming nozzle with prime line..
    RESPOND MSG="Priming nozzle with prime line.."
  {% endif %}
  {% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
    M117 Priming nozzle with prime blob..
    RESPOND MSG="Priming nozzle with prime blob.."
  {% endif %}

  # RatOS configs
  {% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
  {% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
  {% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}

  # Prime Offset
  {% set prime_offset = 5 %}

  # X Start
  {% set x_factor = 0 %}
  {% if printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'min' %}
    {% set x_min = printer.toolhead.axis_minimum.x %}
    {% if x_min < 0 %}
      {% set x_min = 0 %}
    {% endif %}
    {% set x_start = x_min + prime_offset %}
    {% set x_factor = 1 %}
  {% elif printer["gcode_macro RatOS"].nozzle_prime_start_x|lower == 'max' %}
    {% set x_start = printer.toolhead.axis_maximum.x - prime_offset %}
    {% set x_factor = -1 %}
  {% else %}
    {% set x_start = printer["gcode_macro RatOS"].nozzle_prime_start_x|float %}
    {% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'auto' %}
      {% if x_start < (printer.toolhead.axis_minimum.x / 2) %}
        {% set x_factor = 1 %}
      {% else %}
        {% set x_factor = -1 %}
      {% endif %}
    {% endif %}
  {% endif %}

  # X Direction
  {% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'left' %}
    {% set x_factor = -1 %}
  {% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'right' %}
    {% set x_factor = 1 %}
  {% endif %}

  # Y Start
  {% set y_factor = 0 %}
  {% if printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'min' %}
    {% set y_min = printer.toolhead.axis_minimum.y %}
    {% if y_min < 0 %}
      {% set y_min = 0 %}
    {% endif %}
    {% set y_start = y_min + prime_offset %}
    {% set y_factor = 1 %}
  {% elif printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == 'max' %}
    {% set y_start = printer.toolhead.axis_maximum.y - prime_offset %}
    {% set y_factor = -1 %}
  {% else %}
    {% set y_start = printer["gcode_macro RatOS"].nozzle_prime_start_y|float %}
    {% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'auto' %}
      {% if y_start < (printer.toolhead.axis_minimum.y / 2) %}
        {% set y_factor = 1 %}
      {% else %}
        {% set y_factor = -1 %}
      {% endif %}
    {% endif %}
  {% endif %}

  # Y Direction
  {% if printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'forwards' %}
    {% set y_factor = 1 %}
  {% elif printer["gcode_macro RatOS"].nozzle_prime_direction|lower == 'backwards' %}
    {% set y_factor = -1 %}
  {% endif %}

  # Avoid Diagonal Moves
  {% if x_factor!=0 and y_factor!=0 %}
    {% set x_factor = 0 %}
  {% endif %}

  # Move to prime position
  G90                     # Absolute positioning 
  M83                     # Relative extrusion
  G0 Z{z} F{z_speed}      # Lift to start print Z height
  G1 X{x_start} F{speed}  # move to prime x position
  G1 Y{y_start} F{speed}  # move to prime y position

  # Prime Line
  {% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeline' %}
    # Get ready to prime
    G1 Z0.3 F{z_speed}      
    # Prime nozzle 
    G1 X{x_start + (70 * x_factor)} Y{y_start + (70 * y_factor)} E16 F1200
    # Wipe
    G1 X{x_start + (90 * x_factor)} Y{y_start + (90 * y_factor)} F{speed}
  {% endif %}

  # Prime Blob
  {% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
    # Get ready to prime
    G1 Z0.5 F{z_speed}      
    # Extrude a blob
    G1 F60 E20
    # 40% fan
    M106 S102 
    # Move the extruder up by 5mm while extruding, breaks away from blob
    G1 Z5 F100 E5  
    # Move to wipe position, but keep extruding so the wipe is attached to blob
    G1 F200 X{x_start + (25 * x_factor)} Y{y_start + (25 * y_factor)} E1 
    # Go down diagonally while extruding
    # Broken down in z moves under 2mm as a workaround for a tuning tower test.
    # The tuning tower command thinks a new print has been started when z moves over 2mm and aborts.
    G1 F200 X{x_start + (30 * x_factor)} Y{y_start + (30 * y_factor)} Z3.8 E0.5
    G1 F200 X{x_start + (35 * x_factor)} Y{y_start + (35 * y_factor)} Z2.6 E0.5
    G1 F200 X{x_start + (40 * x_factor)} Y{y_start + (40 * y_factor)} Z1.4 E0.5
    G1 F200 X{x_start + (45 * x_factor)} Y{y_start + (45 * y_factor)} Z0.2 E0.5
    # 0% fan
    M106 S0
    # small wipe line
    G1 F200 X{x_start + (50 * x_factor)} Y{y_start + (50 * y_factor)} Z0.2 E0.6 
    # Break away wipe
    G1 F{speed} X{x_start + (100 * x_factor)} Y{y_start + (100 * y_factor)}
  {% endif %}

  # adaptive priming safety move
  # we need to make sure the toolhead doesnt cross the primed material when moving to the actual print 
  {% if printer["gcode_macro RatOS"].nozzle_priming|lower == 'primeblob' %}
    {% set safe_z = 10 %}
    {% if prime_location|lower == 'left' %}
      G0 Z{safe_z} F{z_speed}                                     # lift toolhead above the blob
      G1 X{x_start + toolhead_offset_left} Y{y_start} F{speed}    # move into print area
      G0 Z0.2 F{z_speed}                                          # lower toolhead
    {% endif %}
    {% if prime_location|lower == 'right' %}
      G0 Z{safe_z} F{z_speed}                                     # lift toolhead above the blob
      G1 X{x_start - toolhead_offset_right} Y{y_start} F{speed}   # move into print area
      G0 Z0.2 F{z_speed}                                          # lower toolhead
    {% endif %}
    {% if prime_location|lower == 'front' %}
      G0 Z{safe_z} F{z_speed}                                     # lift toolhead above the blob
      G1 X{x_start} Y{y_start + toolhead_offset_front} F{speed}   # move into print area
      G0 Z0.2 F{z_speed}                                          # lower toolhead
    {% endif %}
    {% if prime_location|lower == 'back' %}
      G0 Z{safe_z} F{z_speed}                                     # lift toolhead above the blob
      G1 X{x_start} Y{y_start - toolhead_offset_back} F{speed}    # move into print area
      G0 Z0.2 F{z_speed}                                          # lower toolhead
    {% endif %}
  {% endif %}

  # Reset adaptive priming location
  SET_GCODE_VARIABLE MACRO=PRIME VARIABLE=prime_location VALUE="''"

  # Restore State
  RESTORE_GCODE_STATE NAME=prime_state


[gcode_macro PRIME_BLOB]
description: this macro exists only to ensure compatibility
gcode:
  PRIME


[gcode_macro PRIME_LINE]
description: this macro exists only to ensure compatibility
gcode:
  PRIME
